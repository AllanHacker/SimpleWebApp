<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"      
 "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">
<mapper namespace="wang.store.address.AddressMapper">
	
	<!-- 查詢出全台灣的縣市 String[] cityOption() -->
	<select id="cityOption" resultType="java.lang.String">
		SELECT DISTINCT
			city
		FROM
			streetname
	</select>
	
	<!-- 查詢出某個縣市的鄉鎮區 String[] districtOption(String city) -->
	<select id="districtOption" resultType="java.lang.String">
		SELECT DISTINCT
			district
		FROM
			streetname
		WHERE
			city=#{city}
	</select>
	
	<!-- 查詢出某縣市中的某鄉鎮區中的所有路名 String[] roadOption(@Param("city") String city, @Param("district") String district) -->
	<select id="roadOption" resultType="java.lang.String">
		SELECT
			road
		FROM
			streetname
		WHERE
			city=#{city} AND district=#{district}
	</select>
	
	<!-- 查詢出某個區域的郵遞區號 Integer postalCode(@Param("city") String city, @Param("district") String district, @Param("road") String road) -->
	<select id="postalCode" resultType="java.lang.Integer">
		SELECT DISTINCT
			postal_code
		FROM
			streetname
		WHERE
			city=#{city} AND district=#{district} AND road=#{road}
	</select>
	
	<!-- 新增地址 Integer insert(Address address) -->
	<insert id="insert" parameterType="wang.store.address.Address">
		INSERT INTO address(
			user_id,
			postal_code,
			city,
			district,
			road,
			other
		)
		VALUES(
			#{userId},
			#{postalCode},
			#{city},
			#{district},
			#{road},
			#{other}
		)
	</insert>
	
	<!-- 以會員id查詢地址 List<Address> addressFindByUserId(Integer userId) -->
	<select id="addressFindByUserId" resultType="wang.store.address.Address">
		SELECT
			id,
			user_id AS userId,
			a_default AS aDefault,
			postal_code AS postalCode,
			city,
			district,
			road,
			other
		FROM
			address
		WHERE
			user_id=#{userId}
		ORDER BY
			a_default DESC
	</select>
	
	<!-- 以會員id及地址id查詢地址 Address addressFindByUserIdAndId(@Param("userId") Integer userId, @Param("id") Integer id) -->
	<select id="addressFindByUserIdAndId" resultType="wang.store.address.Address">
		SELECT
			id,
			user_id AS userId,
			a_default AS aDefault,
			postal_code AS postalCode,
			city,
			district,
			road,
			other
		FROM
			address
		WHERE
			user_id=#{userId} AND id=#{id}
	</select>
	
	<!-- 根據地址id刪除地址資料 Integer addressDelete(Integer id) -->
	<delete id="addressDelete">
		DELETE FROM
			address
		WHERE
			id=#{id}
	</delete>
	
	<!-- 將會員所有地址的預設清除 Integer addressDefaultClear(Integer userId) -->
	<update id="addressDefaultClear">
		UPDATE
			address
		SET
			a_default=0
		WHERE
			user_id=#{userId}
	</update>
	
	<!-- 設定預設收貨地址 Integer addressDefaultSet(@Param("userId") Integer userId, @Param("id") Integer id) -->
	<update id="addressDefaultSet">
		UPDATE
			address
		SET
			a_default=1
		WHERE
			user_id=#{userId} AND id=#{id}
	</update>
	
	<!-- 修改收貨地址 Integer addressUpdate(Address address) -->
	<update id="addressUpdate" parameterType="wang.store.address.Address">
		UPDATE
			address
		SET
			postal_code = #{postalCode},
			city = #{city},
			district = #{district},
			road = #{road},
			other = #{other}
		WHERE
			user_id=#{userId} AND id=#{id}
	</update>
</mapper>







